services:
  backend:
    build:
      context: ./backend/backend/
    container_name: mi-backend
    ports:
      - 3000:3000
    depends_on:
      - dbUsers
      - dbLogging
    environment:
      DB_HOST_USERS: dbUsers
      DB_HOST_LOGGING: dbLogging
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: quieroMantenerEstaContraseñaSegura
      DB_NAME: users
    entrypoint: 
      ["sh", "-c", "sleep 5 && npm start"]

  dbUsers:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: quieroMantenerEstaContraseñaSegura
      POSTGRES_DB: users
    volumes:
      - ./backend/backend/docker/db-game/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  dbLogging:
    image: postgres:15
    container_name: postgres-dbL
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: quieroMantenerEstaContraseñaSegura
      POSTGRES_DB: users
    volumes:
      - ./backend/backend/docker/db-logging/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  frontend:
    build:
      context: ./frontend/
    container_name: frontend
    ports:
      - 4321:4321
    depends_on:
      - backend
    entrypoint:
      ["sh", "-c", "sleep 5 && npm run dev"]

    


volumes:
  postgres-data:

